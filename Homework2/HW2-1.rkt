#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 77 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 158 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 72 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 150 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 1030 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 249
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname HW2-1) (r"
 #"ead-case-sensitive #t) (teachpacks ((lib \"image.rkt\" \"teachpack\""
 #" \"2htdp\"))) (htdp-settings #(#t constructor repeating-decimal #t #"
 #"t none #f ((lib \"image.rkt\" \"teachpack\" \"2htdp\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; the WorldState is structure Editor"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; interpretation: (make-Editor s t) means the text in the editor is"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; (string-append s t) with the coursor displayed between s and t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"Editor"
0 0 24 3 2 #" ["
0 0 14 3 3 #"pre"
0 0 24 3 1 #" "
0 0 14 3 4 #"post"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Exercise 83"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SCENE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"SCENE-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"CURSOR"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"red"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Editor -> image"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; draws the content in the editor on a scene"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;  - given (make-Editor \"\" \"\"), returns "
0 12           4 17 1398
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 1.0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 2.0 9.0 #(struct:text \" \" 0 1 \"black\" 16 #f swiss normal n"
 #"ormal #f))) #(struct:translate 4.0 0.0 #(struct:translate 0 9.0 #(st"
 #"ruct:text \"\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(str"
 #"uct:translate 4.0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 "
 #"0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:tran"
 #"slate 0 1.0 #(struct:translate 0"
 #" 9.0 #(struct:text \"\" 0 1 \"black\" 16 #f swiss normal normal #f))"
 #"))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 2"
 #"0 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"b"
 #"lack\" 2 solid round round)))) #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0)"
 #" #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct"
 #":bb 200.0 20.0 20.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";;  - given (make-Editor \"Hello\" \"World\"), returns "
0 12           4 17 2677
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 1.0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 2.0 9.0 #(struct:text \" \" 0 1 \"black\" 16 #f swiss normal n"
 #"ormal #f))) #(struct:translate 4.0 0.0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:translate 5.5 9.0 #(struct:text \"H\" 0 1 \"black\" 16 #f swiss "
 #"normal normal #f))) #(struct:translate 11.0 0.0 #(struct:translate 4"
 #".5 9.0 #(struct:text \"e\" 0 1 \"black\" 16 #f swiss normal normal #"
 #"f))))) #(struct:translate 20.0 0.0 #(struct:translate 1.5 9.0 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 23.0 0.0 #(struct:translate 1.5 9.0 #(struct:text \"l\""
 #" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(struct:translate "
 #"26.0 0.0 #(struct:translate 4.5 "
 #"9.0 #(struct:text \"o\" 0 1 \"black\" 16 #f swiss normal normal #f))"
 #"))))) #(struct:translate 39.0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point"
 #" 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #"
 #"(struct:translate 0 1.0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 7"
 #".5 9.0 #(struct:text \"W\" 0 1 \"black\" 16 #f swiss normal normal #"
 #"f))) #(struct:translate 15.0 0.0 #(struct:translate 4.5 9.0 #(struct"
 #":text \"o\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(struct"
 #":translate 24.0 0.0 #(struct:translate 2.5 9.0 #(struct:text \"r\" 0"
 #" 1 \"black\" 16 #f swiss normal normal #f))))) #(struct:translate 29"
 #".0 0.0 #(struct:translate 1.5 9.0 #(struct:text \"l\" 0 1 \"black\" "
 #"16 #f swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(stru"
 #"ct:translate 4.5 9.0 #(struct:text \"d\" 0 1 \"black\" 16 #f swiss n"
 #"ormal normal #f))))))))) #(struct:translate 0 0.0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(stru"
 #"ct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pul"
 #"led-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outli"
 #"ne #(struct:pen \"black\" 2 solid round round)))) #(struct:translate"
 #" 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-po"
 #"int 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white"
 #"\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Strategy: Domain knowledge (layer composition)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Editor-pre"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 14 3 6 #"CURSOR"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 11 #"Editor-post"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 11 #"SCENE-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 12 #"SCENE-HEIGHT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #")) "
0 12           4 4 1398
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 1.0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 2.0 9.0 #(struct:text \" \" 0 1 \"black\" 16 #f swiss normal n"
 #"ormal #f))) #(struct:translate 4.0 0.0 #(struct:translate 0 9.0 #(st"
 #"ruct:text \"\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(str"
 #"uct:translate 4.0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 "
 #"0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:tran"
 #"slate 0 1.0 #(struct:translate 0"
 #" 9.0 #(struct:text \"\" 0 1 \"black\" 16 #f swiss normal normal #f))"
 #"))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 2"
 #"0 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"b"
 #"lack\" 2 solid round round)))) #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0)"
 #" #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct"
 #":bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"HelloWorld\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #")) "
0 12           4 4 2833
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 1.0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 2.0 9.0 #(struct:text \" \" 0 1 \"black\" 16 #f swiss normal n"
 #"ormal #f))) #(struct:translate 4.0 0.0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"translate 5.5 9.0 #(struct:text \"H\" 0 1 \"black\" 16 #f swiss norm"
 #"al normal #f))) #(struct:translate 11.0 0.0 #(struct:translate 4.5 9"
 #".0 #(struct:text \"e\" 0 1 \"black\" 16 #f swiss normal normal #f)))"
 #")) #(struct:translate 20.0 0.0 #(struct:translate 1.5 9.0 #(struct:t"
 #"ext \"l\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 23.0 0.0 #(struct:translate 1.5 9.0 #(struct:text \"l\" 0 1"
 #" \"black\" 16 #f swiss normal normal #f))))) #(struct:translate 26.0"
 #" 0.0 #(struct:translate 4.5 9.0 #(struct:text \"o\" 0 1 \"black\" 16"
 #" #f swiss normal normal #f))))) #(struct:translate 35.0 0.0 #(struct"
 #":translate 7.5 9.0 #(struct:text \"W\" 0 1 \"black\" 16 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 50.0 0.0 #(struct:translate 4."
 #"5 9.0 #(struct:text \"o\" 0 1 \"black\" 16 #f swiss normal normal #f"
 #"))))) #(struct:translate 59.0 0.0 #(struct:translate 2.5 9.0 #(struc"
 #"t:text \"r\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(struc"
 #"t:translate 64.0 0.0 #(struct:translate 1.5 9.0 #(struct:text \"l\" "
 #"0 1 \"black\" 16 #f swiss normal normal #f))))) #(struct:translate 6"
 #"7.0 0.0 #(struct:translate 4.5 9.0 #(struct:text \"d\" 0 1 \"black\""
 #" 16 #f swiss normal normal #f))))))) #(struct:translate 80.0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 1.0 #(struct:tran"
 #"slate 0 9.0 #(struct:text \"\" 0 1 \"black\" 16 #f swiss normal norm"
 #"al #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point 0 2"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 "
 #"0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:"
 #"pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 "
 #"20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #"
 #"(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"World\""
0 0 24 3 3 #")) "
0 12           4 4 2677
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 1.0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 2.0 9.0 #(struct:text \" \" 0 1 \"black\" 16 #f swiss normal n"
 #"ormal #f))) #(struct:translate 4.0 0.0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:translate 5.5 9.0 #(struct:text \"H\" 0 1 \"black\" 16 #f swiss "
 #"normal normal #f))) #(struct:translate 11.0 0.0 #(struct:translate 4"
 #".5 9.0 #(struct:text \"e\" 0 1 \"black\" 16 #f swiss normal normal #"
 #"f))))) #(struct:translate 20.0 0.0 #(struct:translate 1.5 9.0 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 23.0 0.0 #(struct:translate 1.5 9.0 #(struct:text \"l\""
 #" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(struct:translate "
 #"26.0 0.0 #(struct:translate 4.5 "
 #"9.0 #(struct:text \"o\" 0 1 \"black\" 16 #f swiss normal normal #f))"
 #"))))) #(struct:translate 39.0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point"
 #" 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #"
 #"(struct:translate 0 1.0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 7"
 #".5 9.0 #(struct:text \"W\" 0 1 \"black\" 16 #f swiss normal normal #"
 #"f))) #(struct:translate 15.0 0.0 #(struct:translate 4.5 9.0 #(struct"
 #":text \"o\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(struct"
 #":translate 24.0 0.0 #(struct:translate 2.5 9.0 #(struct:text \"r\" 0"
 #" 1 \"black\" 16 #f swiss normal normal #f))))) #(struct:translate 29"
 #".0 0.0 #(struct:translate 1.5 9.0 #(struct:text \"l\" 0 1 \"black\" "
 #"16 #f swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(stru"
 #"ct:translate 4.5 9.0 #(struct:text \"d\" 0 1 \"black\" 16 #f swiss n"
 #"ormal normal #f))))))))) #(struct:translate 0 0.0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(stru"
 #"ct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pul"
 #"led-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outli"
 #"ne #(struct:pen \"black\" 2 solid round round)))) #(struct:translate"
 #" 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-po"
 #"int 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white"
 #"\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"HelloWorld\""
0 0 24 3 3 #")) "
0 12           4 4 2832
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 1.0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 2.0 9.0 #(struct:text \" \" 0 1 \"black\" 16 #f swiss normal n"
 #"ormal #f))) #(struct:translate 4.0 0.0 #(struct:translate 0 9.0 #(st"
 #"ruct:text \"\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(str"
 #"uct:translate 4.0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 "
 #"0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:tran"
 #"slate 0 1.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 5.5 9.0 #(struct:"
 #"text \"H\" 0 1 \"black\" 16 #f swiss normal normal #f))) #(struct:tr"
 #"anslate 11.0 0.0 #(struct:translate 4.5 9.0 #(struct:text \"e\" 0 1 "
 #"\"black\" 16 #f swiss normal normal #f))))) #(struct:translate 20.0 "
 #"0.0 #(struct:translate 1.5 9.0 #(struct:text \"l\" 0 1 \"black\" 16 "
 #"#f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #(struct:"
 #"translate 1.5 9.0 #(struct:text \"l\" 0 1 \"black\" 16 #f swiss norm"
 #"al normal #f))))) #(struct:translate 26.0 0.0 #(struct:translate 4.5"
 #" 9.0 #(struct:text \"o\" 0 1 \"black\" 16 #f swiss normal normal #f)"
 #")))) #(struct:translate 35.0 0.0 #(struct:translate 7.5 9.0 #(struct"
 #":text \"W\" 0 1 \"black\" 16 #f swiss normal normal #f))))) #(struct"
 #":translate 50.0 0.0 #(struct:translate 4.5 9.0 #(struct:text \"o\" 0"
 #" 1 \"black\" 16 #f swiss normal normal #f))))) #(struct:translate 59"
 #".0 0.0 #(struct:translate 2.5 9.0 #(struct:text \"r\" 0 1 \"black\" "
 #"16 #f swiss normal normal #f))))) #(struct:translate 64.0 0.0 #(stru"
 #"ct:translate 1.5 9.0 #(struct:text \"l\" 0 1 \"black\" 16 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 67.0 0.0 #(struct:translate "
 #"4.5 9.0 #(struct:text \"d\" 0 1 \"black\" 16 #f swiss normal normal "
 #"#f))))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0"
 #" 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:p"
 #"en \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 2"
 #"0 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #("
 #"struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Exercise 84"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; a keyevent is one of"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;  -- a single-character string"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;     -- \"regular\" key"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;     -- \" \" \"\\r\" \"\\t\" \"\\b\""
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;  -- multiple-character string"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Editor keyevent -> Editor"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; respond to insert or delete operation from key stroke"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;  - given "
0 0 17 3 1 #"("
0 0 17 3 11 #"make-Editor"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"Hello\""
0 0 17 3 1 #" "
0 0 17 3 17 #"\" world!\") \"\\t\"),"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;    returns"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-Editor"
0 0 17 3 1 #" "
0 0 17 3 18 #"\"Hello\" \" world!\")"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;  - given "
0 0 17 3 1 #"("
0 0 17 3 11 #"make-Editor"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"Hello\""
0 0 17 3 1 #" "
0 0 17 3 9 #"\" world!\""
0 0 17 3 8 #") \"\\r\"),"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;    returns"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-Editor"
0 0 17 3 1 #" "
0 0 17 3 18 #"\"Hello\" \" world!\")"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;  - given ("
0 0 17 3 11 #"make-Editor"
0 0 17 3 1 #" "
0 0 17 3 6 #"\"Hell\""
0 0 17 3 1 #" "
0 0 17 3 9 #"\" world!\""
0 0 17 3 7 #") \"o\"),"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;    returns (make-Editor"
0 0 17 3 1 #" "
0 0 17 3 18 #"\"Hello\" \" world!\")"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; strategy: structural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Editor-pre"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"Editor-post"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Editor-pre"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"Editor-post"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Editor-pre"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 2 #") "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"Editor-post"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Editor-pre"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-last"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Editor-pre"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"Editor-post"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Editor-pre"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 12 #"string-first"
0 0 24 3 2 #" ("
0 0 14 3 11 #"Editor-post"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"string-rest"
0 0 24 3 2 #" ("
0 0 14 3 11 #"Editor-post"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 7 #")))]   "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-editor"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Hell\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"o\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Helloo\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Hello World!\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Hello World!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Hello \""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"world!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Hello world!\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Hello world!\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Hello \""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"world!\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Hello World!\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Hello World!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"up\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hello\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\" world!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; string -> string"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Removes the last letter of a string."
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; If the string is empty, return the empty string."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;  -- given \"Testcase\", returns \"T\""
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;  -- given \"\", returns \"\""
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Strategy: Domain knowledge (String)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-first"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"str"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"string-ith"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-first"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Testcase\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"T\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-first"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; string -> sting"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Returns the first letter of a string."
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; If the string is empty, return the empty string."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;  -- given \"Testcase\", returns \"estcase\""
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;  -- given \"\", returns \"\""
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Strategy: Domain knowledge (String)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"str"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-rest"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Testcase\""
0 0 24 3 2 #") "
0 0 19 3 9 #"\"estcase\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-rest"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; string -> string"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Returns the last letter of a string."
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; If the string is empty, return the empty string."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;  -- given \"Testcase\", returns \"e\""
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;  -- given \"\", returns \"\""
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Strategy: Domain knowledge (String)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-last"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"str"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"string-ith"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-last"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Testcase\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"e\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-last"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; string -> string"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; Returns the rest of a string after first letter is removed."
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; If the string is empty, return the empty string."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;  -- given \"Testcase\", returns \"Testcas\""
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;  -- given \"\", returns \"\""
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Strategy: Domain knowledge (String)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"str"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Testcase\""
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Testcas\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Exercise 85"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; string -> Editor"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; run the Editor using the given string as the WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Strategy: Functional composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 7 #"content"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Editor"
0 0 24 3 1 #" "
0 0 14 3 7 #"content"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 4 #"edit"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 6 #"render"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0           0
